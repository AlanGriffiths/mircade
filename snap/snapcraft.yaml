name: mircade
version: git
summary: Example Mir confined desktop
description: This example can be used as a guide
confinement: strict
grade: stable
base: core18

apps:
  mircade:
    command: desktop-launch egmde-launch
    plugs:
      - x11
    environment:
      # Prep PulseAudio
      PULSE_SERVER: unix:$XDG_RUNTIME_DIR/../pulse/native

  daemon:
    command: nested-start desktop-launch egmde-launch
    daemon: simple
    restart-condition: always
    environment:
      # Prep PulseAudio
      PULSE_SYSTEM: 1
      PULSE_RUNTIME_PATH: /var/run/pulse
    plugs:
      - wayland
      - hardware-observe

plugs:
  opengl:
  audio-playback:
  network-bind:
  login-session-control:
  # For GTK3+
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

environment:
  SHELL: bash
  LC_ALL: C.UTF-8
  LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}:${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio
  PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
  # XDG config
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  XDG_DATA_DIRS:   $SNAP/usr/share
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config

layout:
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/webkit2gtk-4.0:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/webkit2gtk-4.0
  /usr/share/kodi:
    bind: $SNAP/usr/share/kodi
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/kodi:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/kodi
  /usr/share/crawl:
    bind: $SNAP/usr/share/crawl
  /usr/share/starfighter:
    bind: $SNAP/usr/share/starfighter
  /usr/share/games:
    bind: $SNAP/usr/share/games
  /usr/games:
    bind: $SNAP/usr/games
  /usr/lib/games:
    bind: $SNAP/usr/lib/games
  /usr/share/X11/xkb:
    bind: $SNAP/usr/share/X11/xkb
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/glvnd:
    bind: $SNAP/usr/share/glvnd
  /etc/glvnd:
    bind: $SNAP/etc/glvnd
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mir
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri

parts:
  neverball:
    plugin: nil
    stage-packages:
      - neverball

  neverputt:
    plugin: nil
    stage-packages:
      - neverputt

  starfighter:
    plugin: nil
    stage-packages:
      - starfighter

  supertux:
    plugin: nil
    stage-packages:
      - supertux

# In 18.04 needs an X server (20.04 works on Wayland)
#  supertuxkart:
#    plugin: nil
#    stage-packages:
#      - supertuxkart

# Window isn't positioned for fullscreen, re-instate when have "kiosk" window management
  crawl-tiles:
    plugin: nil
    stage-packages:
      - crawl-tiles

# Weird cursor - seems to track motion with incorrect scale
#  caveexpress:
#    plugin: nil
#    stage-packages:
#      - caveexpress

# Cursor not always positioned right, seems to track motion with wrong starting position
#  7kaa:
#    plugin: nil
#    stage-packages:
#      - 7kaa

  epiphany:
    plugin: nil
    stage-packages:
      - epiphany-browser

  snapcraft-desktop-helpers:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk3"]
    build-packages:
      - build-essential
      - libgtk-3-dev
    override-build: |
      snapcraftctl build
      # desktop-launch doesn't handle running without a user session very well, this avoids slow startup here
      sed --in-place s'/^  needs_update=true/:/' $SNAPCRAFT_PART_INSTALL/bin/desktop-launch

  kodi:
    plugin: ppa
    ppa: team-xbmc/ppa
    override-stage: |
      if [ -e "$SNAPCRAFT_PART_INSTALL/usr/bin/kodi" ]; then
        sed --in-place s'!/usr!${SNAP}/usr!' $SNAPCRAFT_PART_INSTALL/usr/bin/kodi
      fi
      rm -f $SNAPCRAFT_PART_INSTALL/usr/share/applications/python2.7.desktop
      snapcraftctl stage
    stage-packages:
      - to amd64: [ kodi-wayland, kodi-repository-kodi, kodi-visualization-spectrum, samba-libs ]
      - to  i386: [ kodi-wayland, kodi-repository-kodi, kodi-visualization-spectrum, samba-libs ]

  config:
    plugin: dump
    source: config

  setup-scripts:
    plugin: dump
    source: setup-scripts

  egmde:
    source: egmde
    plugin: cmake-with-ppa
    ppa: mir-team/release
    build-packages:
      - pkg-config
      - libmiral-dev
      - libboost-filesystem-dev
      - libfreetype6-dev
      - libwayland-dev
      - libxkbcommon-dev
    stage-packages:
      - fonts-freefont-ttf
      - mir-graphics-drivers-desktop
      - libmiral3
    stage:
      - -usr/share/wayland-sessions/egmde.desktop

  misc:
    plugin: nil
    stage-packages:
      - libaudio2
      - libxcb1
      - libpulse0
      - libsndfile1
      - libasyncns0
      - liblua5.2-0
      - libslang2
      - libgpm2
      - libgtk3-nocsd0
      - dbus
      - libusb-1.0-0

  sdl2:
    plugin: nil
    stage-packages:
      - libsdl2-2.0-0
      - libsdl2-image-2.0-0
      - libsdl2-mixer-2.0-0
      - libsdl2-net-2.0-0

  mesa:
    plugin: nil
    stage-packages:
      - libgl1-mesa-dri
      - libwayland-egl1-mesa
      - libglu1-mesa
      - va-driver-all

architectures:
  - build-on: amd64
  - build-on: armhf
  - build-on: i386
  - build-on: arm64
  - build-on: ppc64el
