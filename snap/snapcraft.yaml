name: mircade
version: git
summary: Example Mir confined desktop
description: This example can be used as a guide
confinement: strict
grade: stable
base: core20

apps:
  mircade:
    command: bin/desktop-launch egmde-launch
    plugs:
      - x11
    environment:
      # Prep PulseAudio
      PULSE_SERVER: unix:$XDG_RUNTIME_DIR/../pulse/native

  daemon:
    command: bin/nested-start desktop-launch egmde-launch
    daemon: simple
    restart-condition: always
    environment:
      # Prep PulseAudio
      PULSE_SYSTEM: 1
      PULSE_RUNTIME_PATH: /var/run/pulse
    plugs:
      - wayland
      - hardware-observe

plugs:
#  - audio-playback
#  - audio-record
#  - camera
  desktop:
  hardware-observe:
  home:
  network:
#  - network-bind
  network-manager-observe:
#  - opengl
#  - pulseaudio
  removable-media:
  screen-inhibit-control:
  system-observe:
  audio-record:
  camera:
  opengl:
  audio-playback:
  network-bind:
  login-session-control:
  # For GTK3+
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

environment:
  MIR_SERVER_XWAYLAND_PATH: ${SNAP}/usr/bin/Xwayland
  MIR_SERVER_ENABLE_X11: 1
  SHELL: bash
  LC_ALL: C.UTF-8
  LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}:${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio:$SNAP/opt/zoom
  PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
  # XDG config
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  XDG_DATA_DIRS:   $SNAP/usr/share
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config

layout:
  /usr/local:
    bind: $SNAP/usr/local
  /opt/zoom:
    bind: $SNAP/opt/zoom
  /usr/bin/zoom:
    symlink: $SNAP/usr/bin/zoom
  /usr/bin/xkbcomp:
    symlink: $SNAP/usr/bin/xkbcomp
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/webkit2gtk-4.0:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/webkit2gtk-4.0
  /usr/share/kodi:
    bind: $SNAP/usr/share/kodi
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/kodi:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/kodi
  /usr/share/crawl:
    bind: $SNAP/usr/share/crawl
  /usr/share/starfighter:
    bind: $SNAP/usr/share/starfighter
  /usr/share/games:
    bind: $SNAP/usr/share/games
  /usr/games:
    bind: $SNAP/usr/games
  /usr/lib/games:
    bind: $SNAP/usr/lib/games
  /usr/share/X11/xkb:
    bind: $SNAP/usr/share/X11/xkb
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/glvnd:
    bind: $SNAP/usr/share/glvnd
  /etc/glvnd:
    bind: $SNAP/etc/glvnd
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mir
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri

parts:
  ppa-setup:
    plugin: nil
    override-pull: |
      sudo apt --assume-yes install software-properties-common
      sudo add-apt-repository -y ppa:mir-team/release
      snapcraftctl pull

  zoom:
    plugin: dump
    source:
      - on amd64: https://zoom.us/client/latest/zoom_amd64.deb
      - to  i386: https://zoom.us/client/latest/zoom_i386.deb
    override-build: |
      # remove danging symlink
      rm -f $SNAPCRAFT_PART_BUILD/usr/bin/zoom
      echo "QT_QPA_PLATFORM=xcb \$SNAP/opt/zoom/ZoomLauncher" > $SNAPCRAFT_PART_BUILD/usr/bin/zoom
      chmod +x $SNAPCRAFT_PART_BUILD/usr/bin/zoom
      # Unfrig LD_LIBRARY_PATH
      sed -i s/D_LIBRAR/XXXXXXXX/g opt/zoom/ZoomLauncher
      snapcraftctl build
    build-attributes: [keep-execstack]

  zoom-deps:
    plugin: nil
    stage-packages:
      - libnspr4
      - libnss3
      - libpulse-mainloop-glib0
      - libqt53dcore5
      - libqt53dinput5
      - libqt53dlogic5
      - libqt53dquick5
      - libqt53dquickscene2d5
      - libqt53drender5
      - libqt5concurrent5
      - libqt5core5a
      - libqt5dbus5
      - libqt5gui5
      - libqt5multimedia5
      - libqt5multimedia5-plugins
      - libqt5network5
      - libqt5printsupport5
      - libqt5qml5
      - libqt5quick5
      - libqt5quickcontrols2-5
      - libqt5quickparticles5
      - libqt5quicktemplates2-5
      - libqt5sql5
      - libqt5waylandclient5
      - libqt5widgets5
      - libqt5xmlpatterns5
      - libxcb-image0
      - libxcb-keysyms1
      - libxcb-randr0
      - libxcb-xtest0
      - libx11-6
      - libxtst6
      - pulseaudio-utils

  xterm:
    plugin: nil
    stage-packages:
      - xterm

  xwayland:
    plugin: nil
    stage-packages:
      - xwayland
      - libbz2-1.0

  epiphany:
    plugin: nil
    stage-packages:
      - epiphany-browser

  glxgears:
    plugin: nil
    stage-packages:
      - mesa-utils

  snapcraft-desktop-helpers:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk3"]
    build-packages:
      - build-essential
      - libgtk-3-dev
    override-build: |
      snapcraftctl build
      # desktop-launch doesn't handle running without a user session very well, this avoids slow startup here
      sed --in-place s'/^  needs_update=true/:/' $SNAPCRAFT_PART_INSTALL/bin/desktop-launch

  setup-scripts:
    plugin: dump
    source: setup-scripts

  egmde:
    after: [ ppa-setup ]
    source: egmde
    plugin: cmake
    override-build: |
      sudo apt install --assume-yes libmiral-dev
      snapcraftctl build
    build-packages:
      - pkg-config
      - libmiral-dev
      - libboost-filesystem-dev
      - libfreetype6-dev
      - libwayland-dev
      - libxkbcommon-dev
    stage-packages:
      - fonts-freefont-ttf
      - mir-graphics-drivers-desktop
      - libmiral4
    stage:
      - -usr/share/wayland-sessions/egmde.desktop

  misc:
    plugin: nil
    stage-packages:
      - libaudio2
      - libxcb1
      - libpulse0
      - libsndfile1
      - libasyncns0
      - liblua5.2-0
      - libslang2
      - libgpm2
      - libgtk3-nocsd0
      - dbus
      - libusb-1.0-0

  mesa:
    plugin: nil
    stage-packages:
      - libgl1-mesa-glx
      - libgl1-mesa-dri
      - libwayland-egl1-mesa
      - libglu1-mesa
      - va-driver-all

architectures:
  - build-on: amd64
  - build-on: armhf
#  - build-on: i386
  - build-on: arm64
  - build-on: ppc64el
